// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PackIT.Infrastructure.EF.Contexts;

#nullable disable

namespace PackIT.Infrastructure.EF.Migrations.WriteDbContext
{
    [DbContext(typeof(Contexts.WriteDbContext))]
    [Migration("20230630091257_Init_Write")]
    partial class Init_Write
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("packing_write")
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("PackIT.Domain.Entities.PackingList", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<int>("Version")
                        .HasColumnType("integer");

                    b.Property<string>("_localization")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Localization");

                    b.Property<string>("_name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Name");

                    b.HasKey("Id");

                    b.ToTable("PackingLists", "packing_write");
                });

            modelBuilder.Entity("PackIT.Domain.ValueObjects.PackingItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("IsPacked")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("PackingListId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("PackingListId1")
                        .HasColumnType("uuid");

                    b.Property<long>("Quantity")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("PackingListId");

                    b.HasIndex("PackingListId1");

                    b.ToTable("PackingItems", "packing_write");
                });

            modelBuilder.Entity("PackIT.Domain.ValueObjects.PackingItem", b =>
                {
                    b.HasOne("PackIT.Domain.Entities.PackingList", null)
                        .WithMany("Items")
                        .HasForeignKey("PackingListId");

                    b.HasOne("PackIT.Domain.Entities.PackingList", null)
                        .WithMany("_items")
                        .HasForeignKey("PackingListId1");
                });

            modelBuilder.Entity("PackIT.Domain.Entities.PackingList", b =>
                {
                    b.Navigation("Items");

                    b.Navigation("_items");
                });
#pragma warning restore 612, 618
        }
    }
}
